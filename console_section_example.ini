Can we make the pytest terminal output show as per our previous decision to include the info we decided upon earlier, i.e.:

================== Pytest-Insight Summary ==================

Last Session: 2025-04-14 22:30 | SUT: myproject | Profile: default | 124 tests
  Outcomes:  110 passed (88.7%) | 10 failed (8.1%) | 2 xfailed | 2 skipped
  Reruns:    4 tests rerun | 2 succeeded after rerun
  Health:    B (Stable, minor flakiness)
  Actionable:
    - Investigate persistent failure: test_login_timeout
    - 1 new flaky test detected: test_api_latency

------------------------------------------------------------

All Sessions (last 30 days): 12 sessions | SUT: myproject
  Outcomes:  1200 passed (90%) | 90 failed (6.8%) | 10 xfailed | 30 skipped
  Reruns:    40 tests rerun | 28 succeeded after rerun
  Health:    B+ (Improving)
  Trends:    Failures ↓ | Flakiness ↔ | Duration ↑

  Actionable:
    - test_data_import has failed in 5 sessions
    - 2 new regressions detected this week

============================================================




===================================================================== pytest-insight ======================================================================

🧪 Pytest Insight Summary
Session Start: 2025-04-15 21:32:31 | End: 2025-04-15 21:32:32 | Duration: 1.5 seconds
System Under Test: GEMS-SiteBuilder-Staging | Test Suite: full_regression

Test Outcomes:
  ┌────────────┬────────┬────────┬──────────┐
  │ Outcome    │ Count  │ %      │ Δ vs prev│
  ├────────────┼────────┼────────┼──────────┤
  │ Passed     │ 35     │ 35.4%  │ -2       │
  │ Failed     │ 30     │ 30.3%  │ +4       │
  │ Skipped    │  4     │  4.0%  │ =        │
  │ Xfailed    │  7     │  7.1%  │ =        │
  │ Xpassed    │  4     │  4.0%  │ =        │
  │ Error      │  5     │  5.1%  │ =        │
  │ Rerun      │ 14     │ 14.1%  │ +3       │
  └────────────┴────────┴────────┴──────────┘
  Health Score: 52.7/100 ↓ 6.1 | Warning Rate: 5.1% | Failure Rate: 30.3%

Trend (Last 5 runs):  82.4% → 70.1% → 65.2% → 58.8% → 52.7%

──────────────────────────────────────────────────────────────────── Slowest Tests ─────────────────────────────────────────────────────────────────────
  [1.01s] demo-tests/orig/test_sleep.py::test_timeout_sleep
  [0.22s] demo-tests/orig/test_1.py::test_16_fail_compare_dicts_for_pytest_icdiff
  [<0.01s] demo-tests/orig/test_xpass_xfail.py::test_xfail_by_inline
  [<0.01s] demo-tests/orig/test_1.py::test_a_ok
  [<0.01s] demo-tests/orig/test_xpass_xfail.py::test_xfail_by_decorator

──────────────────────────────────────────────────────────────────── Flakiest Tests (Top 5) ─────────────────────────────────────────────────────────────────────
  • demo-tests/orig/test_1.py::test_flaky_always_fail     → 2 reruns | ❌ Final: FAILED
  • demo-tests/orig/test_rerun_fixed.py::test_flaky_1      → 2 reruns | ❌ Final: FAILED
  • demo-tests/orig/test_rerun_fixed.py::test_flaky_2      → 2 reruns | ❌ Final: FAILED
  • demo-tests/orig/test_rerun_random.py::test_flaky_2     → 2 reruns | ❌ Final: FAILED
  • demo-tests/orig/test_rerun_random.py::test_flaky_always_fail → 2 reruns | ❌ Final: FAILED

──────────────────────────────────────────────────────────────────── Persistent Failures (100%) ─────────────────────────────────────────────────────────────────────
  demo-tests/orig/test_issue_1004.py::test_foo2
  demo-tests/orig/test_2.py::test_b_fail
  demo-tests/orig/test_basic.py::test_basic_fail_1
  demo-tests/orig/test_class.py::TestClass1::test_two
  demo-tests/orig/test_class.py::TestClass2::test_one

──────────────────────────────────────────────────────────────────── Component Scores ─────────────────────────────────────────────────────────────────────
  Stability     :  67.5/100 ↓     — multiple tests failing consistently
  Performance   :  N/A            — no perf markers collected
  Warnings      :  94.9/100 ↑     — low warning rate
  Rerun Recovery:  0/14 tests recovered from reruns (0%) ❗
  Test Volatility: +3 tests added, 2 removed since last run

──────────────────────────────────────────────────────────────────── Recommendations ─────────────────────────────────────────────────────────────────────
  🔧 [High] Investigate persistent failures in core suite:
      - test_b_fail, test_foo2, test_two
  🔁 [Medium] Flaky test group: test_flaky_always_fail
  ⏱ [Low] Longest test: test_timeout_sleep (1.01s)

  🧼 Consider cleaning up tests marked xfailed but not failing anymore.
  🧪 Use markers (e.g., @pytest.mark.slow) to flag and filter long-running tests.

===============================================================================================================================================
